//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//
//     对此文件的更改可能导致不正确的行为，并在以下条件下丢失:
//     代码重新生成。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.SqlServiceSoap")]
    public interface SqlServiceSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEmployeeList", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetEmployeeListResponse> GetEmployeeListAsync(ServiceReference1.GetEmployeeListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetResult", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetResultResponse> GetResultAsync(ServiceReference1.GetResultRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetEmployeeListRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetEmployeeList", Namespace="http://tempuri.org/", Order=0)]
        public ServiceReference1.GetEmployeeListRequestBody Body;
        
        public GetEmployeeListRequest()
        {
        }
        
        public GetEmployeeListRequest(ServiceReference1.GetEmployeeListRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetEmployeeListRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sql;
        
        public GetEmployeeListRequestBody()
        {
        }
        
        public GetEmployeeListRequestBody(string sql)
        {
            this.sql = sql;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetEmployeeListResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetEmployeeListResponse", Namespace="http://tempuri.org/", Order=0)]
        public ServiceReference1.GetEmployeeListResponseBody Body;
        
        public GetEmployeeListResponse()
        {
        }
        
        public GetEmployeeListResponse(ServiceReference1.GetEmployeeListResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetEmployeeListResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetEmployeeListResult;
        
        public GetEmployeeListResponseBody()
        {
        }
        
        public GetEmployeeListResponseBody(string GetEmployeeListResult)
        {
            this.GetEmployeeListResult = GetEmployeeListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetResultRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetResult", Namespace="http://tempuri.org/", Order=0)]
        public ServiceReference1.GetResultRequestBody Body;
        
        public GetResultRequest()
        {
        }
        
        public GetResultRequest(ServiceReference1.GetResultRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetResultRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string SFZH;
        
        public GetResultRequestBody()
        {
        }
        
        public GetResultRequestBody(string SFZH)
        {
            this.SFZH = SFZH;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetResultResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetResultResponse", Namespace="http://tempuri.org/", Order=0)]
        public ServiceReference1.GetResultResponseBody Body;
        
        public GetResultResponse()
        {
        }
        
        public GetResultResponse(ServiceReference1.GetResultResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetResultResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetResultResult;
        
        public GetResultResponseBody()
        {
        }
        
        public GetResultResponseBody(string GetResultResult)
        {
            this.GetResultResult = GetResultResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface SqlServiceSoapChannel : ServiceReference1.SqlServiceSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class SqlServiceSoapClient : System.ServiceModel.ClientBase<ServiceReference1.SqlServiceSoap>, ServiceReference1.SqlServiceSoap
    {
        
        /// <summary>
        /// 实现此分部方法，配置服务终结点。
        /// </summary>
        /// <param name="serviceEndpoint">要配置的终结点</param>
        /// <param name="clientCredentials">客户端凭据</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SqlServiceSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(SqlServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), SqlServiceSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SqlServiceSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SqlServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SqlServiceSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SqlServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SqlServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.GetEmployeeListResponse> ServiceReference1.SqlServiceSoap.GetEmployeeListAsync(ServiceReference1.GetEmployeeListRequest request)
        {
            return base.Channel.GetEmployeeListAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetEmployeeListResponse> GetEmployeeListAsync(string sql)
        {
            ServiceReference1.GetEmployeeListRequest inValue = new ServiceReference1.GetEmployeeListRequest();
            inValue.Body = new ServiceReference1.GetEmployeeListRequestBody();
            inValue.Body.sql = sql;
            return ((ServiceReference1.SqlServiceSoap)(this)).GetEmployeeListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.GetResultResponse> ServiceReference1.SqlServiceSoap.GetResultAsync(ServiceReference1.GetResultRequest request)
        {
            return base.Channel.GetResultAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetResultResponse> GetResultAsync(string SFZH)
        {
            ServiceReference1.GetResultRequest inValue = new ServiceReference1.GetResultRequest();
            inValue.Body = new ServiceReference1.GetResultRequestBody();
            inValue.Body.SFZH = SFZH;
            return ((ServiceReference1.SqlServiceSoap)(this)).GetResultAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.SqlServiceSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.SqlServiceSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("找不到名称为“{0}”的终结点。", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.SqlServiceSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://192.168.3.240:8888/SqlService.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.SqlServiceSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://192.168.3.240:8888/SqlService.asmx");
            }
            throw new System.InvalidOperationException(string.Format("找不到名称为“{0}”的终结点。", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            SqlServiceSoap,
            
            SqlServiceSoap12,
        }
    }
}
